{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damim\\\\Desktop\\\\notesapp\\\\app\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  let info = {\n    name: '',\n    email: '',\n    password: ''\n  };\n  const [regtrationInfo, setRegistrationInfo] = useState(info);\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\n  const navigate = useNavigate();\n  function handleChange(event) {\n    setRegistrationInfo(prevRegistrationInfo => {\n      return {\n        ...prevRegistrationInfo,\n        [event.target.name]: event.target.value\n      };\n    });\n  }\n  function handleClick(info) {\n    setRegistrationInfo(prevRegistrationInfo => {\n      return {\n        ...prevRegistrationInfo,\n        id: nanoid()\n      };\n    });\n    fetch('/register', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(info)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setRegistrationSuccess(prev => prev = data.response);\n    });\n  }\n  useEffect(() => {\n    registrationSuccess === true ? navigate('/') : console.log('Registration wasnt successfull');\n    console.log(registrationSuccess);\n  }, [registrationSuccess]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClick,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"zkqJ3jwCOmwXTm7eUWSFsSaysKA=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useEffect","useNavigate","nanoid","Register","info","name","email","password","regtrationInfo","setRegistrationInfo","registrationSuccess","setRegistrationSuccess","navigate","handleChange","event","prevRegistrationInfo","target","value","handleClick","id","fetch","method","mode","headers","body","JSON","stringify","then","response","json","data","console","log","prev"],"sources":["C:/Users/damim/Desktop/notesapp/app/src/pages/Register.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { nanoid } from 'nanoid'\r\n\r\nconst Register = ()=>{\r\n    let info = {\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    }\r\n    const[regtrationInfo, setRegistrationInfo] = useState(info)\r\n    const[registrationSuccess, setRegistrationSuccess] = useState(false)\r\n\r\n    const navigate = useNavigate()\r\n    function handleChange(event){\r\n        setRegistrationInfo(prevRegistrationInfo => {\r\n            return {...prevRegistrationInfo, [event.target.name] : event.target.value}\r\n        })\r\n    }\r\n    function handleClick(info){\r\n        setRegistrationInfo(prevRegistrationInfo=>{\r\n            return{...prevRegistrationInfo,id:nanoid()}\r\n        })\r\n        fetch('/register',{\r\n            method: 'POST',\r\n            mode:'cors',\r\n            headers:{\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(info)\r\n        })\r\n        .then(response => response.json())\r\n        .then(data=> {\r\n            console.log(data)\r\n            setRegistrationSuccess(prev => prev=data.response)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        registrationSuccess === true ? navigate('/'):console.log('Registration wasnt successfull')\r\n        console.log(registrationSuccess)\r\n    },[registrationSuccess])\r\n    return (\r\n        <form>\r\n            <h1>Register</h1>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input type=\"text\" name=\"name\" id=\"name\" onChange={handleChange}/>\r\n\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" name=\"email\" id=\"email\" onChange={handleChange}/>\r\n\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" id=\"password\" onChange={handleChange}/>\r\n\r\n            <button type=\"button\" onClick={handleClick}>Register</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}