{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damim\\\\Desktop\\\\notesapp\\\\app\\\\src\\\\pages\\\\User.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [userInfo, setUserInfo] = useState(null);\n  useEffect(() => {\n    fetch(`/user/${userId}`).then(res => res.json()).then(data => {\n      setUserInfo(prevUserInfo => prevUserInfo = data);\n    });\n  }, []);\n  let info = {\n    id: nanoid(),\n    title: '',\n    text: \"\"\n  };\n  const [newInput, setNewInput] = useState(info);\n  function onChange(info) {\n    setNewInput(prevNewInfo => {\n      return {\n        ...prevRegistrationInfo,\n        [event.target.name]: event.target.value\n      };\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello User\", userInfo !== null ? userInfo[0].name : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n        for: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        for: \"text\",\n        children: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"text\",\n        name: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(User, \"kJ+U3QrJ7LRIK0hDB8ZQpFlUmZU=\", false, function () {\n  return [useParams];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["useParams","useState","useEffect","User","userId","userInfo","setUserInfo","fetch","then","res","json","data","prevUserInfo","info","id","nanoid","title","text","newInput","setNewInput","onChange","prevNewInfo","prevRegistrationInfo","event","target","name","value"],"sources":["C:/Users/damim/Desktop/notesapp/app/src/pages/User.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport {useState, useEffect} from 'react'\r\n\r\nconst User = ()=>{\r\n    const {userId} = useParams()\r\n    const[userInfo, setUserInfo] = useState(null)\r\n    useEffect(()=>{\r\n        fetch(`/user/${userId}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setUserInfo(prevUserInfo=> prevUserInfo = data)\r\n            })\r\n    },[])\r\n\r\n\r\n    let info = {\r\n        id:nanoid(),\r\n        title: '',\r\n        text:\"\"\r\n    }\r\n\r\n    const  [newInput, setNewInput] = useState(info)\r\n\r\n    function onChange(info) {\r\n        setNewInput(prevNewInfo => {\r\n            return {...prevRegistrationInfo, [event.target.name] : event.target.value}\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Hello User{userInfo !== null ? userInfo[0].name:''}</h1> \r\n\r\n            <form>\r\n                <lable for=\"title\">Title</lable>\r\n                <input type=\"text\" id=\"title\" name=\"title\"/>\r\n                <lable for=\"text\">Text</lable>\r\n                <input type=\"text\" id=\"text\" name=\"text\"/>\r\n                <button type=\"button\">Add</button>\r\n            </form>\r\n        </div>\r\n     \r\n    )\r\n}\r\n\r\nexport default User"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA;AAEzC,MAAMC,IAAI,GAAG,MAAI;EAAA;EACb,MAAM;IAACC;EAAM,CAAC,GAAGJ,SAAS,EAAE;EAC5B,MAAK,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC7CC,SAAS,CAAC,MAAI;IACVK,KAAK,CAAE,SAAQH,MAAO,EAAC,CAAC,CACnBI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACVL,WAAW,CAACM,YAAY,IAAGA,YAAY,GAAGD,IAAI,CAAC;IACnD,CAAC,CAAC;EACV,CAAC,EAAC,EAAE,CAAC;EAGL,IAAIE,IAAI,GAAG;IACPC,EAAE,EAACC,MAAM,EAAE;IACXC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAC;EACT,CAAC;EAED,MAAO,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAACY,IAAI,CAAC;EAE/C,SAASO,QAAQ,CAACP,IAAI,EAAE;IACpBM,WAAW,CAACE,WAAW,IAAI;MACvB,OAAO;QAAC,GAAGC,oBAAoB;QAAE,CAACC,KAAK,CAACC,MAAM,CAACC,IAAI,GAAIF,KAAK,CAACC,MAAM,CAACE;MAAK,CAAC;IAC9E,CAAC,CAAC;EACN;EAEA,oBACI;IAAA,wBACI;MAAA,yBAAerB,QAAQ,KAAK,IAAI,GAAGA,QAAQ,CAAC,CAAC,CAAC,CAACoB,IAAI,GAAC,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAE5D;MAAA,wBACI;QAAO,GAAG,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eAChC;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,OAAO;QAAC,IAAI,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE,eAC5C;QAAO,GAAG,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eAC9B;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,MAAM;QAAC,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eAC1C;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAGd,CAAC;AAAA,GAxCKtB,IAAI;EAAA,QACWH,SAAS;AAAA;AAAA,KADxBG,IAAI;AA0CV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}