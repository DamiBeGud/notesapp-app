{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damim\\\\Desktop\\\\notesapp\\\\app\\\\src\\\\components\\\\NewPost.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPost = () => {\n  _s();\n  let info = {\n    userId: `${userId}`,\n    postId: nanoid(),\n    title: '',\n    text: ''\n  };\n  const [newInput, setNewInput] = useState(info);\n  function onChange(event) {\n    setNewInput(prevNewInfo => {\n      return {\n        ...prevNewInfo,\n        [event.target.name]: event.target.value\n      };\n    });\n  }\n  function handleClick(newInput) {\n    console.log(newInput);\n    console.log(userId);\n    fetch(`/user/${userId}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newInput)\n    }).then(response => response.json()).then(data => console.log(data));\n    setNewInput(info);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      name: \"text\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => handleClick(newInput),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(NewPost, \"4IHMj7aId8m0MB+IBnn/DpcS0gA=\");\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["useParams","useState","useEffect","nanoid","NewPost","info","userId","postId","title","text","newInput","setNewInput","onChange","event","prevNewInfo","target","name","value","handleClick","console","log","fetch","method","mode","headers","body","JSON","stringify","then","response","json","data"],"sources":["C:/Users/damim/Desktop/notesapp/app/src/components/NewPost.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport {useState, useEffect} from 'react'\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst NewPost = ()=>{\r\n    let info = {\r\n        userId:`${userId}`,\r\n        postId:nanoid(),\r\n        title: '',\r\n        text:''\r\n    }\r\n\r\n    const  [newInput, setNewInput] = useState(info)\r\n\r\n    function onChange(event) {\r\n        setNewInput(prevNewInfo => {\r\n            return {...prevNewInfo, [event.target.name] : event.target.value}\r\n        })\r\n        \r\n    }\r\n    function handleClick(newInput){\r\n        console.log(newInput)\r\n\r\n        console.log(userId)\r\n        fetch(`/user/${userId}`,{\r\n            method: 'POST',\r\n            mode:'cors',\r\n            headers:{\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(newInput)\r\n        })\r\n        .then(response => response.json())\r\n        .then(data=> console.log(data))\r\n\r\n        setNewInput(info)\r\n    }\r\n    return(\r\n        <form>\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" name=\"title\" onChange={onChange}/>\r\n                <label htmlFor=\"text\">Text</label>\r\n                <input type=\"text\" id=\"text\" name=\"text\" onChange={onChange}/>\r\n                <button type=\"button\" onClick={()=> handleClick(newInput)}>Add</button>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default NewPost"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAEhC,MAAMC,OAAO,GAAG,MAAI;EAAA;EAChB,IAAIC,IAAI,GAAG;IACPC,MAAM,EAAE,GAAEA,MAAO,EAAC;IAClBC,MAAM,EAACJ,MAAM,EAAE;IACfK,KAAK,EAAE,EAAE;IACTC,IAAI,EAAC;EACT,CAAC;EAED,MAAO,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACI,IAAI,CAAC;EAE/C,SAASO,QAAQ,CAACC,KAAK,EAAE;IACrBF,WAAW,CAACG,WAAW,IAAI;MACvB,OAAO;QAAC,GAAGA,WAAW;QAAE,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,GAAIH,KAAK,CAACE,MAAM,CAACE;MAAK,CAAC;IACrE,CAAC,CAAC;EAEN;EACA,SAASC,WAAW,CAACR,QAAQ,EAAC;IAC1BS,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;IAErBS,OAAO,CAACC,GAAG,CAACd,MAAM,CAAC;IACnBe,KAAK,CAAE,SAAQf,MAAO,EAAC,EAAC;MACpBgB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAC,MAAM;MACXC,OAAO,EAAC;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC5CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,QAAQ;IACjC,CAAC,CAAC,CACDkB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAGZ,OAAO,CAACC,GAAG,CAACW,IAAI,CAAC,CAAC;IAE/BpB,WAAW,CAACN,IAAI,CAAC;EACrB;EACA,oBACI;IAAA,wBACQ;MAAO,OAAO,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACpC;MAAO,IAAI,EAAC,MAAM;MAAC,EAAE,EAAC,OAAO;MAAC,IAAI,EAAC,OAAO;MAAC,QAAQ,EAAEO;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE,eAChE;MAAO,OAAO,EAAC,MAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eAClC;MAAO,IAAI,EAAC,MAAM;MAAC,EAAE,EAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAEA;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE,eAC9D;MAAQ,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAE,MAAKM,WAAW,CAACR,QAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa;EAAA;IAAA;IAAA;IAAA;EAAA,QACpE;AAEnB,CAAC;AAAA,GAxCKN,OAAO;AAAA,KAAPA,OAAO;AA0Cb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}